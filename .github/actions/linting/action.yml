name: 'Lint Action'
description: 'Perform linting for project'
inputs:
  checkout_directory:
    description: "checkout directory to where ingredient repo content is to be copied."
    default: "src"
  ref:
    description: "branch to checkout, by default It will take the short ref name of the branch or tag that triggered the workflow run."
    required: false
  token:
    description: "Github token to fetch source"
    required: false
  python-version:
    description: 'Python version to use'
    required: false
    default: '3.10.11'

runs:
  using: 'composite'
  steps:
    # - name: Checkout code
    #   uses: actions/checkout@v4
    #   with:
    #     path: ${{ inputs.checkout_directory }}
    #     ref: ${{ inputs.ref || github.ref }}
    #     token: ${{ inputs.token || github.token }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pylint black isort
        pip install flake8-html pylint-report
      shell: pwsh

    - name: Run Flake8 Linting
      continue-on-error: true
      run: |
        mkdir -p reports/flake8
        flake8 --format=html --htmldir=reports/flake8 .
      shell: pwsh

    - name: Run Pylint
      continue-on-error: true
      run: |
        mkdir -p reports/pylint
        pylint **/*.py > reports/pylint/pylint-report.txt
      shell: pwsh

    - name: Run Black Formatting Check
      continue-on-error: true
      run: |
        mkdir -p reports/black
        black --check . > reports/black/formatting-check.txt
      shell: pwsh

    - name: Run Isort Import Sorting Check
      continue-on-error: true
      run: |
        mkdir -p reports/isort
        isort --check-only . > reports/isort/import-check.txt
      shell: pwsh

    - name: Upload Linting Reports
      uses: actions/upload-artifact@v4
      with:
        name: linting-reports
        path: reports/