name: 'Trivy Vulnerability Scan'
description: 'Perform vulnerability scanning using Trivy'
inputs:
  checkout_directory:
    description: "Checkout directory to where ingredient repo content is to be copied."
    default: "src"
  ref:
    description: "Branch to checkout. Defaults to the branch or tag that triggered the workflow run."
    required: false
  token:
    description: "GitHub token for fetching the source"
    required: false
  # Trivy Parameters
  trivy_version:
    description: 'Trivy version to use'
    required: false
    default: '0.58.0'
  scan-ref:
    description: 'Scan reference'
    required: false
    default: 'requirements.txt'
  scan-type:
    description: 'Scan type to use for scanning vulnerability'
    required: false
    default: 'fs'
  scanners:
    description: 'Comma-separated list of security issues to detect'
    required: false
    default: 'vuln,secret,misconfig,license'
  severity:
    description: 'Severities of vulnerabilities to display'
    required: false
    default: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
  timeout:
    description: 'Timeout duration (default 5m0s)'
    required: false
    default: ''
  report_name:
    description: 'Name of the report file'
    required: false
    default: 'trivy-results'
  upload_to_artifactory:
    description: 'Flag to control whether to upload the results to Artifactory'
    required: false
    default: 'false'

# Adding read permissions for all available permissions
permissions: read-all

runs:
  using: 'composite'
  steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10.11'

    - name: Install TrivyScan
      run: |
        echo "Installing Trivy version: ${{ inputs.trivy_version }}"
        wget https://github.com/aquasecurity/trivy/releases/download/v${{ inputs.trivy_version }}/trivy_${{ inputs.trivy_version }}_Linux-64bit.deb
        sudo dpkg -i trivy_${{ inputs.trivy_version }}_Linux-64bit.deb
      shell: bash

    - name: Verify installation
      run: |
        trivy --version
      shell: bash

    - name: Scan requirements.txt
      run: |
        trivy ${{ inputs.scan-type }} ${{ inputs.scan-ref }} --format json --output ${{ inputs.report_name }}.json --severity ${{ inputs.severity }} --scanners ${{ inputs.scanners }}
      shell: bash                                           

    - name: Upload Vulnerability Scan Results
      # if: ${{ inputs.upload_to_artifactory == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.report_name }}
        path: ${{ inputs.report_name }}.json